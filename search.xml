<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HTML基础篇</title>
      <link href="/2022/08/27/HTML%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
      <url>/2022/08/27/HTML%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>​本章着重复习Html的基础内容，学习Html究竟要学些什么呢？主要是学习各种标签，来搭建网页的“结构”。✨✨</p><p>​本篇文章主要由五个章节构成，从WEB标准到初识HTML，接着学习HTML常用标签，最后学习表格列表和表单。💪💪开始充电之旅啦~~~</p><h1 id="一、认识WEB"><a href="#一、认识WEB" class="headerlink" title="一、认识WEB"></a>一、认识WEB</h1><p>​「网页」主要是由<code>文字</code>、<code>图像</code>和<code>超链接</code>等元素构成，当然除了这些元素，网页中还可以包括音频、视频以及Flash等。</p><p>​「浏览器」是网页显示、运行的平台。</p><p>​「浏览器内核」(排版引擎、解释引擎、渲染引擎)</p><p><strong>负责读取网页内容，整理讯息，计算网页的显示方式并显示页面。</strong> </p><table><thead><tr><th align="center">浏览器</th><th align="center">内核</th><th align="left">备注</th></tr></thead><tbody><tr><td align="center">IE</td><td align="center">Trident</td><td align="left">IE、猎豹安全、360极速浏览器、百度浏览器</td></tr><tr><td align="center">firefox</td><td align="center">Gecko</td><td align="left">可惜这几年已经没落了，打开速度慢、升级频繁、猪一样的队友flash、神一样的对手chrome。</td></tr><tr><td align="center">Safari</td><td align="center">webkit</td><td align="left">现在很多人错误地把 webkit 叫做 chrome内核（即使 chrome内核已经是 blink 了）。苹果感觉像被别人抢了媳妇，都哭晕在厕所里面了。</td></tr><tr><td align="center">chrome</td><td align="center">Chromium&#x2F;Blink</td><td align="left">在 Chromium 项目中研发 Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。Blink 其实是 WebKit 的分支。大部分国产浏览器最新版都采用Blink内核。二次开发</td></tr><tr><td align="center">Opera</td><td align="center">blink</td><td align="left">现在跟随chrome用blink内核。</td></tr></tbody></table><h2 id="Web标准"><a href="#Web标准" class="headerlink" title="Web标准"></a>Web标准</h2><h3 id="「构成」👉-结构标准，表现标准和行为标准"><a href="#「构成」👉-结构标准，表现标准和行为标准" class="headerlink" title="「构成」👉 结构标准，表现标准和行为标准"></a>「构成」👉 结构标准，表现标准和行为标准</h3><ul><li>结构标准用于对网页元素进行整理和分类(HTML)</li><li>表现标准用于设置网页元素的版式、颜色、大小等外观属性(CSS)</li><li>行为标准用于对网页模型的定义及交互的编写(JavaScript)</li></ul><h3 id="「Web标准的优点」👇"><a href="#「Web标准的优点」👇" class="headerlink" title="「Web标准的优点」👇"></a>「Web标准的优点」👇</h3><ul><li>易于维护：只需更改CSS文件，就可以改变整站的样式</li><li>页面响应快：HTML文档体积变小，响应时间短</li><li>可访问性：语义化的HTML（结构和表现相分离的HTML）编写的网页文件，更容易被屏幕阅读器识别</li><li>设备兼容性：不同的样式表可以让网页在不同的设备上呈现不同的样式</li><li>搜索引擎：语义化的HTML能更容易被搜索引擎解析，提升排名</li></ul><h1 id="二、HTML初识"><a href="#二、HTML初识" class="headerlink" title="二、HTML初识"></a>二、HTML初识</h1><h2 id="HTML初识"><a href="#HTML初识" class="headerlink" title="HTML初识"></a>HTML初识</h2><h4 id="「HTML」-Hyper-Text-Markup-Language-超文本标记语言"><a href="#「HTML」-Hyper-Text-Markup-Language-超文本标记语言" class="headerlink" title="「HTML」(Hyper Text Markup Language):超文本标记语言"></a>「HTML」(Hyper Text Markup Language):超文本标记语言</h4><h4 id="「所谓超文本，有2层含义」"><a href="#「所谓超文本，有2层含义」" class="headerlink" title="「所谓超文本，有2层含义」"></a>「所谓超文本，有2层含义」</h4><ul><li>因为它可以加入图片、声音、动画、多媒体等内容（超越文本限制 ）</li><li>不仅如此，它还可以从一个文件跳转到另一个文件，与世界各地主机的文件连接（超级链接文本）。</li></ul><h4 id="「HTML骨架格式」"><a href="#「HTML骨架格式」" class="headerlink" title="「HTML骨架格式」"></a>「HTML骨架格式」</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 页面中最大的标签 根标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 头部标签 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!-- 标题标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 文档的主体 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="「团队约定大小写」"><a href="#「团队约定大小写」" class="headerlink" title="「团队约定大小写」"></a>「团队约定大小写」</h4><ul><li>HTML标签名、类名、标签属性和大部分属性值统一用小写</li></ul><h4 id="「HTML元素标签分类」"><a href="#「HTML元素标签分类」" class="headerlink" title="「HTML元素标签分类」"></a>「HTML元素标签分类」</h4><ul><li>常规元素(双标签)</li><li>空元素(单标签)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">常规元素(双标签)</span><br><span class="line"> <span class="tag">&lt;<span class="name">标签名</span>&gt;</span> 内容 <span class="tag">&lt;/<span class="name">标签名</span>&gt;</span>   比如<span class="tag">&lt;<span class="name">body</span>&gt;</span>我是文字<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> 空元素(单标签)</span><br><span class="line"> <span class="tag">&lt;<span class="name">标签名</span> /&gt;</span>  比如 <span class="tag">&lt;<span class="name">br</span> /&gt;</span>或<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="「HTML标签关系」"><a href="#「HTML标签关系」" class="headerlink" title="「HTML标签关系」"></a>「HTML标签关系」</h4><ul><li>嵌套关系父子级包含关系</li><li>并列关系兄弟级并列关系</li><li>如果两个标签之间的关系是嵌套关系，子元素最好缩进一个tab键的身位（一个tab是4个空格）。如果是并列关系，最好上下对齐。</li></ul><h4 id="「文档类型」"><a href="#「文档类型」" class="headerlink" title="「文档类型」"></a>「文档类型」</h4><p>​用来说明你用的XHTML或者HTML是什么版本。<code>&lt;!DOCTYPE html&gt;</code>告诉浏览器按照HTML5标准解析页面。</p><h4 id="页面语言lang"><a href="#页面语言lang" class="headerlink" title="页面语言lang"></a>页面语言lang</h4><p>​lang指定该html标签内容所用的语言</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span>  </span><br><span class="line"> en 定义语言为英语 zh-CN定义语言为中文</span><br></pre></td></tr></table></figure><p>「lang的作用」</p><ul><li>根据根据lang属性来设定不同语言的css样式，或者字体</li><li>告诉搜索引擎做精确的识别</li><li>让语法检查程序做语言识别</li><li>帮助翻译工具做识别</li><li>帮助网页阅读程序做识别</li></ul><h4 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h4><p>​(Character set)是多个字符的集合,计算机要准确的处理各种字符集文字，需要进行字符编码，以便计算机能够识别和存储各种文字。</p><ul><li>UTF-8是目前最常用的字符集编码方式</li><li>让 html 文件是以 UTF-8 编码保存的， 浏览器根据编码去解码对应的html内容。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="「meta-viewport的用法」"><a href="#「meta-viewport的用法」" class="headerlink" title="「meta viewport的用法」"></a>「meta viewport的用法」</h4><p>​通常viewport是指视窗、视口。浏览器上(也可能是一个app中的webview)用来显示网页的那部分区域。在移动端和pc端视口是不同的，pc端的视口是浏览器窗口区域，而在移动端有三个不同的视口概念：布局视口、视觉视口、理想视口</p><h5 id="meta有两个属性name-和-http-equiv"><a href="#meta有两个属性name-和-http-equiv" class="headerlink" title="meta有两个属性name 和 http-equiv"></a>meta有两个属性name 和 http-equiv</h5><h6 id="name属性的取值"><a href="#name属性的取值" class="headerlink" title="name属性的取值"></a>name属性的取值</h6><ul><li><strong>keywords(关键字</strong>) 告诉搜索引擎，该网页的关键字</li><li><strong>description(网站内容描述)</strong> 用于告诉搜索引擎，你网站的主要内容。</li><li><strong>viewport(移动端的窗口)</strong></li><li><strong>robots(定义搜索引擎爬虫的索引方式)</strong> robots用来告诉爬虫哪些页面需要索引，哪些页面不需要索引</li><li><strong>author(作者)</strong></li><li><strong>generator(网页制作软件）</strong></li><li><strong>copyright(版权)</strong></li></ul><h6 id="http-equiv有以下参数"><a href="#http-equiv有以下参数" class="headerlink" title="http-equiv有以下参数"></a>http-equiv有以下参数</h6><p>​<strong>http-equiv</strong> 相当于http的文件头作用，它可以向浏览器传回一些有用的信息，以帮助正确和精确地显示网页内容</p><ul><li><strong>content-Type</strong> 设定网页字符集(Html4用法，不推荐)</li><li><strong>Expires(期限)</strong> ,可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新传输。</li><li><strong>Pragma(cache模式)</strong>,是用于设定禁止浏览器从本地机的缓存中调阅页面内容，设定后一旦离开网页就无法从Cache中再调出</li><li><strong>Refresh(刷新)</strong>,自动刷新并指向新页面。</li><li><strong>cache-control（请求和响应遵循的缓存机制）</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML标签的语义化"><a href="#HTML标签的语义化" class="headerlink" title="HTML标签的语义化"></a>HTML标签的语义化</h2><ul><li>方便代码的阅读和维护，样式丢失的时候能让页面呈现清晰的结构。</li><li>有利于SEO，搜索引擎根据标签来确定上下文和各个关键字的权重。</li><li>方便其他设备解析，如盲人阅读器根据语义渲染网页</li></ul><p>标签：规定页面上所有链接的默认 URL 和设置整体链接的打开状态</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">&quot;_self&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 跳转到 百度</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML常用标签"><a href="#HTML常用标签" class="headerlink" title="HTML常用标签"></a>HTML常用标签</h2><h3 id="排版标签"><a href="#排版标签" class="headerlink" title="排版标签"></a>排版标签</h3><p>​主要和css搭配使用，显示网页结构的标签，是网页布局最常用的标签。</p><ul><li>标题标签h(h1~h6)</li><li>段落标签p,可以把 HTML 文档分割为若干段落</li><li>水平线标签hr</li><li>换行标签br</li><li>div和span标签:是没有语义的,是我们网页布局最主要的2个盒子。</li></ul><h3 id="排版标签-1"><a href="#排版标签-1" class="headerlink" title="排版标签"></a>排版标签</h3><ul><li>b和strong 文字以<strong>粗体</strong>显示</li><li>i和em 文字以<em>斜体</em>显示</li><li>s和del 文字以加<del>删除线</del>显示</li><li>u和ins 文字以加<u>下划线</u>显示</li></ul><h3 id="标签属性-行内式"><a href="#标签属性-行内式" class="headerlink" title="标签属性(行内式)"></a>标签属性(行内式)</h3><p>​使用HTML制作网页时，如果想让HTML标签提供更多的信息，可以使用HTML标签的属性加以设置.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签名</span> <span class="attr">属性1</span>=<span class="string">&quot;属性值1&quot;</span> <span class="attr">属性2</span>=<span class="string">&quot;属性值2&quot;</span> …&gt;</span> 内容 <span class="tag">&lt;/<span class="name">标签名</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">手机</span> <span class="attr">颜色</span>=<span class="string">&quot;红色&quot;</span> <span class="attr">大小</span>=<span class="string">&quot;5寸&quot;</span>&gt;</span>  <span class="tag">&lt;/<span class="name">手机</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="图像标签img"><a href="#图像标签img" class="headerlink" title="图像标签img"></a>图像标签img</h3><p><img src="/2022/08/27/HTML%E5%9F%BA%E7%A1%80%E7%AF%87/640.png" alt="图片"></p><p><strong>注意：</strong></p><ul><li>标签可以拥有多个属性，必须写在开始标签中，位于标签名后面。</li><li>属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。</li><li>采取  键值对 的格式  key&#x3D;”value”  的格式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;cz.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span> <span class="attr">border</span>=<span class="string">&quot;3&quot;</span> <span class="attr">title</span>=<span class="string">&quot;这是个小蒲公英&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="链接标签-重点"><a href="#链接标签-重点" class="headerlink" title="链接标签(重点)"></a>链接标签(重点)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;跳转目标&quot;</span> <span class="attr">target</span>=<span class="string">&quot;目标窗口的弹出方式&quot;</span>&gt;</span>文本或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">target=&quot;_self&quot;  默认窗口弹出方式</span><br><span class="line">target=&quot;_blank&quot; 新窗口弹出</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">属性</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">href</td><td align="left">用于指定链接目标的url地址，（必须属性）当为标签应用href属性时，它就具有了超链接的功能</td></tr><tr><td align="left">target</td><td align="left">用于指定链接页面的打开方式，其取值有_self和_blank两种，其中_self为默认值，_blank为在新窗口中打开方式。</td></tr></tbody></table><h4 id="src-和-href-的区别"><a href="#src-和-href-的区别" class="headerlink" title="src 和 href 的区别"></a>src 和 href 的区别</h4><p>​一句话概括：src 是引入资源的 href 是跳转url的</p><ol><li>src用于替换当前元素，href用于在当前文档和引用资源之间确立联系。</li><li>src是source的缩写，指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和frame等元素。当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。</li><li>href是Hypertext Reference的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接。如果我们在文档中添加那么浏览器会识别该文档为css文件，就会并行下载资源并且不会停止对当前文档的处理。这也是为什么建议使用link方式来加载css，而不是使用@import方式。</li></ol><p>注意：</p><ol><li><p>外部链接 需要添加 </p><p>[]: http:&#x2F;&#x2F; <a href="http://www.baidu.com/">www.baidu.com</a></p></li><li><p>内部链接 直接链接内部页面名称即可 比如 &lt; a href&#x3D;”index.html”&gt; 首页</p></li><li><p>如果当时没有确定链接目标时，通常将链接标签的href属性值定义为“#”(即href&#x3D;”#”)，表示该链接暂时为一个空链接。</p></li><li><p>不仅可以创建文本超链接，在网页中各种网页元素，如图像、表格、音频、视频等都可以添加超链接。</p></li></ol><p><strong>锚点定位：通过创建锚点链接，用户能够快速定位到目标内容。</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 使用相应的id名标注跳转目标的位置。 (找目标)</span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">&quot;two&quot;</span>&gt;</span>第2集<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">2. 使用<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#id名&quot;</span>&gt;</span>链接文本<span class="tag">&lt;/<span class="name">a</span>&gt;</span>创建链接文本（被点击的） </span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#two&quot;</span>&gt;</span>   </span><br></pre></td></tr></table></figure><h3 id="注释标签"><a href="#注释标签" class="headerlink" title="注释标签"></a>注释标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释语句 --&gt;</span>     </span><br><span class="line"> 快捷键是：    ctrl + /       </span><br><span class="line"> 或者 ctrl +shift + / </span><br></pre></td></tr></table></figure><p><strong>团队约定：</strong>注释内容前后各一个空格字符，注释位于要注释代码的上面，单独占一行</p><h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径<img src="/2022/08/27/HTML%E5%9F%BA%E7%A1%80%E7%AF%87/640-16616107915613-16616107935815.png" alt="图片"></h3><h3 id="其他知识"><a href="#其他知识" class="headerlink" title="其他知识"></a>其他知识</h3><p>​预格式化文本pre标签元素中的文本通常会保留空格和换行符。而文本也会呈现为等宽字体。格式化文本就是 ，按照我们预先写好的文字格式来显示页面， 保留空格和换行等。</p><p><strong>特殊字符</strong></p><p><img src="/2022/08/27/HTML%E5%9F%BA%E7%A1%80%E7%AF%87/640-16616108283386-16616108298428.png" alt="图片"></p><h4 id="什么是XHTML"><a href="#什么是XHTML" class="headerlink" title="什么是XHTML"></a>什么是XHTML</h4><ul><li>XHTML 指<strong>「可扩展超文本标签语言」</strong>（EXtensible HyperText Markup Language）。</li><li>XHTML 的目标是取代 HTML。</li><li>XHTML 与 HTML 4.01 几乎是相同的。</li><li>XHTML 是更严格更纯净的 HTML 版本。</li><li>XHTML 是作为一种 XML 应用被重新定义的 HTML,是严格版本的HTML。例如它要求标签必须小写，标签必须被正确关闭，标签顺序必须正确排列，对于属性都必须使用双引号等。</li><li>XHTML 是一个 W3C 标准。</li></ul><h4 id="写HTML代码时应注意什么？"><a href="#写HTML代码时应注意什么？" class="headerlink" title="写HTML代码时应注意什么？"></a><strong>写HTML代码时应注意什么？</strong></h4><ul><li>尽可能少的使用无语义的标签div和span；</li><li>在语义不明显时，既可以使用div或者p时，尽量用p, 因为p在默认情况下有上下间距，对兼容特殊终端有利；</li><li>不要使用纯样式标签，如：b、font、u等，改用css设置。</li><li>需要强调的文本，可以包含在strong或者em标签中（浏览器预设样式，能用CSS指定就不用他们），strong默认样式是加粗（不要用b），em是斜体（不用i）；</li><li>使用表格时，标题要用caption，表头用thead，主体部分用tbody包围，尾部用tfoot包围。表头和一般单元格要区分开，表头用th，单元格用td；</li><li>表单域要用fieldset标签包起来，并用legend标签说明表单的用途；</li><li>每个input标签对应的说明文本都需要使用label标签，并且通过为input设置id属性，在lable标签中设置for来让说明文本和相对应的input关联起来。</li></ul><hr><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>​现在还是较为常用的一种标签，但不是用来布局，常见显示、展示表格式数据。因为它可以让数据显示的非常的规整，可读性非常好。特别是后台展示数据的时候表格运用是否熟练就显得很重要，一个清爽简约的表格能够把繁杂的数据表现得很有条理。</p><h3 id="创建表格"><a href="#创建表格" class="headerlink" title="创建表格"></a><strong>创建表格</strong></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>table、tr、td，他们是创建表格的基本标签，缺一不可</p><ul><li>table用于定义一个表格标签。</li><li>tr标签 用于定义表格中的行，必须嵌套在 table标签中。</li><li>td 用于定义表格中的单元格，必须嵌套在 &lt; tr &gt;&lt;&#x2F; tr &gt; 标签中。</li><li>字母 td 指表格数据（table data），即数据单元格的内容，现在我们明白，表格最合适的地方就是用来存储数据的。td像一个容器，可以容纳所有的元素。</li></ul><p><img src="/2022/08/27/HTML%E5%9F%BA%E7%A1%80%E7%AF%87/640-16616109903099-166161099195811.jpeg" alt="图片"></p><p>​<strong>表头单元格标签th</strong>:一般表头单元格位于表格的第一行或第一列，并且文本加粗居中,只需用表头标签&lt; th &gt;&lt;&#x2F; th&gt;替代相应的单元格标签&lt; td &gt;&lt;&#x2F; td&gt;即可。</p><p><img src="/2022/08/27/HTML%E5%9F%BA%E7%A1%80%E7%AF%87/640-166161108206615.png" alt="图片"></p><p>​<strong>表格标题caption</strong>通常这个标题会被居中且显示于表格之上。caption 标签必须紧随 table 标签之后。这个标签只存在 表格里面才有意义。你是风儿我是沙</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">caption</span>&gt;</span>我是表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表格属性"><a href="#表格属性" class="headerlink" title="表格属性"></a><strong>表格属性</strong></h3><p><img src="/2022/08/27/HTML%E5%9F%BA%E7%A1%80%E7%AF%87/640-166161114189217-166161114321119.png" alt="图片"></p><p>​三参为0，平时开发的我们这三个参数   border  cellpadding  cellspacing 为  0</p><h3 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a><strong>合并单元格</strong></h3><p>​合并的顺序我们按照  先上 后下   先左  后右 的顺序 ,合并完之后需要删除多余的单元格。</p><ul><li>跨行合并：rowspan&#x3D;”合并单元格的个数”</li><li>跨列合并：colspan&#x3D;”合并单元格的个数”</li></ul><h3 id="总结表格"><a href="#总结表格" class="headerlink" title="总结表格"></a><strong>总结表格</strong></h3><table><thead><tr><th align="left">标签名</th><th align="left">定义</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">&lt; table&gt;&lt;&#x2F; table&gt;</td><td align="left">表格标签</td><td align="left">就是一个四方的盒子</td></tr><tr><td align="left">&lt; tr&gt;&lt;&#x2F; tr&gt;</td><td align="left">表格行标签</td><td align="left">行标签要再table标签内部才有意义</td></tr><tr><td align="left">&lt; td&gt;&lt;&#x2F; td&gt;</td><td align="left">单元格标签</td><td align="left">单元格标签是个容器级元素，可以放任何东西</td></tr><tr><td align="left">&lt; th&gt;&lt;&#x2F; th&gt;</td><td align="left">表头单元格标签</td><td align="left">它还是一个单元格，但是里面的文字会居中且加粗</td></tr><tr><td align="left">&lt; caption&gt;&lt;&#x2F; caption&gt;</td><td align="left">表格标题标签</td><td align="left">表格的标题，跟着表格一起走，和表格居中对齐</td></tr><tr><td align="left">clospan 和 rowspan</td><td align="left">合并属性</td><td align="left">用来合并单元格的</td></tr></tbody></table><h3 id="表格划分结构"><a href="#表格划分结构" class="headerlink" title="表格划分结构"></a><strong>表格划分结构</strong></h3><p>​对于比较复杂的表格，表格的结构也就相对的复杂了，所以又将表格分割成三个部分：题头、正文和脚注。而这三部分分别用:thead,tbody,tfoot来标注， 这样更好的分清表格结构。</p><p><strong>注意：</strong></p><ol><li><p>&lt; thead&gt;&lt;&#x2F; thead&gt;：用于定义表格的头部。用来放标题之类的东西。&lt; thead&gt; 内部必须拥有&lt; tr&gt; 标签！</p></li><li><p>&lt; tbody&gt;&lt;&#x2F; tbody&gt;：用于定义表格的主体。放数据本体 。</p></li><li><p>&lt; tfoot&gt;&lt;&#x2F; tfoot&gt;放表格的脚注之类。</p></li></ol><p>以上标签都是放到table标签中。</p><hr><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>​容器里面装载着结构，样式一致的文字或图表的一种形式，叫列表。</p><p>​列表最大的特点就是整齐 、整洁、 有序，跟表格类似，但是它可组合自由度会更高。</p><h4 id="无序列表-ul"><a href="#无序列表-ul" class="headerlink" title="无序列表 ul"></a><strong>无序列表 ul</strong></h4><ul><li>&lt; ul&gt;&lt;&#x2F; ul&gt;中只能嵌套&lt; li&gt;&lt;&#x2F; li&gt;，直接在&lt; ul&gt;&lt;&#x2F; ul&gt;标签中输入其他标签或者文字的做法是不被允许的。</li><li>&lt; li&gt;与&lt;&#x2F; li&gt;之间相当于一个容器，可以容纳所有元素。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="有序列表-ol"><a href="#有序列表-ol" class="headerlink" title="有序列表 ol"></a><strong>有序列表 ol</strong></h4><ul><li>&lt; ol&gt;标签中的type属性值为排序的序列号，不添加type属性时，有序列表默认从数字1开始排序。</li><li>常用的type属性值分别为是1，a，A，i，I</li><li>&lt; ol reversed&#x3D;”reversed”&gt;中的reversed属性能够让有序列表中的序列倒序排列。</li><li>&lt; ol start&#x3D;”3”&gt;中的start属性值为3，有序列表中的第一个序列号将从3开始排列。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;A&quot;</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="自定义列表-dl"><a href="#自定义列表-dl" class="headerlink" title="自定义列表 dl"></a><strong>自定义列表 dl</strong></h4><ul><li>定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词2<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词2解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2022/08/27/HTML%E5%9F%BA%E7%A1%80%E7%AF%87/640-166161137822120-166161137987522.png" alt="图片"></p><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><p>​在HTML中，一个完整的表单通常由<strong>表单控件</strong>（也称为表单元素）、<strong>提示信息</strong>和<strong>表单域</strong>3个部分构成。表单目的是为了收集用户信息。</p><p><img src="/2022/08/27/HTML%E5%9F%BA%E7%A1%80%E7%AF%87/640-166161141577123-166161141797325.png" alt="图片"></p><p><strong>表单控件：</strong></p><p>​包含了具体的表单功能项，如单行文本输入框、密码输入框、复选框、提交按钮、重置按钮等。</p><p><strong>提示信息：</strong></p><p>​一个表单中通常还需要包含一些说明性的文字，提示用户进行填写和操作。</p><p><strong>表单域：</strong> </p><p>​它相当于一个容器，用来容纳所有的表单控件和提示信息，可以通过他定义处理表单数据所用程序的url地址，以及数据提交到服务器的方法。如果不定义表单域，表单中的数据就无法传送到后台服务器。</p><h3 id="input-控件"><a href="#input-控件" class="headerlink" title="input 控件"></a><strong>input 控件</strong></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;属性值&quot;</span> <span class="attr">value</span>=<span class="string">&quot;你好&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>input 输入的意思</li><li>&lt; input &#x2F;&gt;标签为单标签</li><li>type属性设置不同的属性值用来指定不同的控件类型</li><li>除了type属性还有别的属性</li></ul><p><strong>常用属性：</strong></p><p><img src="/2022/08/27/HTML%E5%9F%BA%E7%A1%80%E7%AF%87/640-166161150314226-166161150432928.png" alt="图片"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span> </span><br><span class="line">密  码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="value属性"><a href="#value属性" class="headerlink" title="value属性"></a><strong>value属性</strong></h4><ul><li>value 默认的文本值。有些表单想刚打开页面就默认显示几个文字，就可以通过这个value 来设置。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span> </span><br></pre></td></tr></table></figure><h4 id="name属性"><a href="#name属性" class="headerlink" title="name属性"></a><strong>name属性</strong></h4><ul><li>name表单的名字， 这样，后台可以通过这个name属性找到这个表单。 页面中的表单很多，name主要作用就是用于区别不同的表单。</li><li>name属性后面的值，是我们自己定义的。</li><li>radio  如果是一组，我们必须给他们命名相同的名字 name  这样就可以多个选其中的一个啦</li><li>name属性，我们现在用的较少，但是，当我们学ajax 和后台的时候，是必须的。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>  /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span>女</span><br></pre></td></tr></table></figure><h4 id="checked属性"><a href="#checked属性" class="headerlink" title="checked属性"></a><strong>checked属性</strong></h4><p>​表示默认选中状态。 较常见于 单选按钮和复选按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">性    别:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> /&gt;</span>女 </span><br></pre></td></tr></table></figure><h4 id="input-属性小结"><a href="#input-属性小结" class="headerlink" title="input 属性小结"></a><strong>input 属性小结</strong></h4><table><thead><tr><th align="left">属性</th><th align="left">说明</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">type</td><td align="left">表单类型</td><td align="left">用来指定不同的控件类型</td></tr><tr><td align="left">value</td><td align="left">表单值</td><td align="left">表单里面默认显示的文本</td></tr><tr><td align="left">name</td><td align="left">表单名字</td><td align="left">页面中的表单很多，name主要作用就是用于区别不同的表单。</td></tr><tr><td align="left">checked</td><td align="left">默认选中</td><td align="left">表示那个单选或者复选按钮一开始就被选中了</td></tr></tbody></table><h3 id="label标签"><a href="#label标签" class="headerlink" title="label标签"></a><strong>label标签</strong></h3><ul><li>label 标签为 input 元素定义标注（标签）。</li><li>label标签主要目的是为了提高用户体验。为用户提高最优秀的服务。</li></ul><p><strong>作用：</strong>用于绑定一个表单元素, 当点击label标签的时候, 被绑定的表单元素就会获得输入焦点。</p><p><strong>如何绑定元素呢</strong></p><ul><li>第一种用法就是用label标签直接包含input表单， 适合单个表单选择</li><li>第二种用法 for 属性规定 label 与哪个表单元素绑定(通过id)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">第一种</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span> 用户名： </span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;usename&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">第二种</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>  <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="textarea控件-文本域"><a href="#textarea控件-文本域" class="headerlink" title="textarea控件(文本域)"></a><strong>textarea控件(文本域)</strong></h3><ul><li>通过textarea控件可以轻松地创建多行文本输入框.</li><li>cols&#x3D;”每行中的字符数” rows&#x3D;”显示的行数”  我们实际开发不用</li></ul><p><img src="/2022/08/27/HTML%E5%9F%BA%E7%A1%80%E7%AF%87/640-166161167288829-166161167414531.png" alt="图片"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> &gt;</span></span><br><span class="line">  文本内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文本框和文本域区别"><a href="#文本框和文本域区别" class="headerlink" title="文本框和文本域区别"></a><strong>文本框和文本域区别</strong></h3><table><thead><tr><th align="left">表单</th><th align="center">名称</th><th align="center">区别</th><th align="right">默认值显示</th><th align="right">用于场景</th></tr></thead><tbody><tr><td align="left">input type&#x3D;”text”</td><td align="center">文本框</td><td align="center">只能显示一行文本</td><td align="right">单标签，通过value显示默认值</td><td align="right">用户名、昵称、密码等</td></tr><tr><td align="left">textarea</td><td align="center">文本域</td><td align="center">可以显示多行文本</td><td align="right">双标签，默认值写到标签中间</td><td align="right">留言板</td></tr></tbody></table><h3 id="select下拉列表"><a href="#select下拉列表" class="headerlink" title="select下拉列表"></a><strong>select下拉列表</strong></h3><ul><li>如果有多个选项让用户选择，为了节约空间，我们可以使用select控件定义下拉列表。</li><li>在option 中定义selected &#x3D;” selected “时，当前项即为默认选中项。</li><li>我们实际开发会用的比较少</li></ul><p><img src="/2022/08/27/HTML%E5%9F%BA%E7%A1%80%E7%AF%87/640-166161173222932-166161173332234.png" alt="图片"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="form表单域"><a href="#form表单域" class="headerlink" title="form表单域"></a>form表单域</h2><ul><li>收集的用户信息怎么传递给服务器？</li><li>通过form表单域</li><li>目的：</li><li>在HTML中，form标签被用于定义表单域，以实现用户信息的收集和传递，form中的所有内容都会被提交给服务器。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;url地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span> <span class="attr">name</span>=<span class="string">&quot;表单名称&quot;</span>&gt;</span></span><br><span class="line">  各种表单控件</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>常用属性：</strong></p><ul><li>每个表单都应该有自己表单域。后面学 ajax 后台交互的时候，必须需要form表单域。</li></ul><table><thead><tr><th align="left">属性</th><th align="left">属性值</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">action</td><td align="left">url地址</td><td align="left">用于指定接收并处理表单数据的服务器程序的url地址。</td></tr><tr><td align="left">method</td><td align="left">get&#x2F;post</td><td align="left">用于设置表单数据的提交方式，其取值为get或post。</td></tr><tr><td align="left">name</td><td align="left">名称</td><td align="left">用于指定表单的名称，以区分同一个页面中的多个表单。</td></tr></tbody></table><p><strong>GET 和 POST 的区别</strong></p><ul><li>GET在浏览器回退时是无害的，而POST会再次提交请求。</li><li>GET请求会被浏览器主动cache，而POST不会，除非手动设置。</li><li>GET请求只能进行url编码，而POST支持多种编码方式。</li><li>GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。</li><li>GET请求大小一般是(1024字节)，http协议并没有限制，而与服务器，操作系统有关，POST理论上来说没有大小限制，http协议规范也没有进行大小限制，但实际上post所能传递的数据量根据取决于服务器的设置和内存大小。</li><li>对参数的数据类型，GET只接受ASCII字符，而POST没有限制。</li><li>GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。</li></ul><p><strong>团队约定：</strong></p><ul><li>元素属性值使用双引号语法</li><li>元素属性值可以写上的都写上</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">推荐</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> HTML基础篇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MYSql</title>
      <link href="/2022/08/26/MYSql/"/>
      <url>/2022/08/26/MYSql/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库密码：root"><a href="#数据库密码：root" class="headerlink" title="数据库密码：root"></a>数据库密码：root</h1><h1 id="服务器的启动和停止"><a href="#服务器的启动和停止" class="headerlink" title="服务器的启动和停止"></a>服务器的启动和停止</h1><ol><li><h6 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql80</span><br></pre></td></tr></table></figure></li><li><h6 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql80</span><br></pre></td></tr></table></figure></li></ol><h1 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h1><h2 id="方式一：使用MySQL提供的客户端命令行工具"><a href="#方式一：使用MySQL提供的客户端命令行工具" class="headerlink" title="方式一：使用MySQL提供的客户端命令行工具"></a>方式一：使用MySQL提供的客户端命令行工具</h2><p><img src="/2022/08/26/MYSql/1.png" alt="img"></p><h2 id="方式二：使用系统自带的命令行工具执行指令"><a href="#方式二：使用系统自带的命令行工具执行指令" class="headerlink" title="方式二：使用系统自带的命令行工具执行指令"></a>方式二：使用系统自带的命令行工具执行指令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql [-h 127.0.0.1] [-P 3306] -u root -p</span><br></pre></td></tr></table></figure><p> 参数： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-h : MySQL服务所在的主机IP</span><br><span class="line"></span><br><span class="line">​-P : MySQL服务端口号， 默认3306 </span><br><span class="line"></span><br><span class="line">​-u : MySQL数据库用户名 </span><br><span class="line"></span><br><span class="line">​-p ： MySQL数据库用户名对应的密码</span><br></pre></td></tr></table></figure><p>[]内为可选参数，如果需要连接远程的MySQL，需要加上这两个参数来指定远程主机IP、端口，如果 连接本地的MySQL，则无需指定这两个参数。</p><p>注意： 使用这种方式进行连接时，需要安装完毕后配置PATH环境变量。</p><h1 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h1><h2 id="1-关系型数据库（RDBMS）"><a href="#1-关系型数据库（RDBMS）" class="headerlink" title="1. 关系型数据库（RDBMS）"></a>1. 关系型数据库（RDBMS）</h2><p>​概念：建立在关系模型基础上，由多张相互连接的二维表组成的数据库。 而所谓二维表，指的是由行和列组成的表。我们之前提到的MySQL、Oracle、DB2、 SQLServer这些都是属于关系型数据库，里面都是基于二维表存储数据的。简单说，基于二维表存储 数据的数据库就成为关系型数据库，不是基于二维表存储数据的数据库，就是非关系型数据库。</p><p>特点： A. 使用表存储数据，格式统一，便于维护。</p><p>​ B. 使用SQL语言操作，标准统一，使用方便。</p><h2 id="2-数据模型"><a href="#2-数据模型" class="headerlink" title="2. 数据模型"></a>2. 数据模型</h2><p>MySQL是关系型数据库，是基于二维表进行数据存储的，具体的结构图下:</p><p><img src="/2022/08/26/MYSql/2.png"></p><ul><li>我们可以通过MySQL客户端连接数据库管理系统DBMS，然后通过DBMS操作数据库。 </li><li>可以使用SQL语句，通过数据库管理系统操作数据库，以及操作数据库中的表结构及数据。</li><li>一个数据库服务器中可以创建多个数据库，一个数据库中也可以包含多张表，而一张表中又可以包 含多行记录。</li></ul><h1 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h1><p>全称 Structured Query Language，结构化查询语言。操作关系型数据库的编程语言，定义了 一套操作关系型数据库统一标准 。</p><h2 id="2-1-SQL通用语法"><a href="#2-1-SQL通用语法" class="headerlink" title="2.1 SQL通用语法"></a>2.1 SQL通用语法</h2><p>在学习具体的SQL语句之前，先来了解一下SQL语言的同于语法。</p><h3 id="1-SQL语句可以单行或多行书写，以分号结尾。"><a href="#1-SQL语句可以单行或多行书写，以分号结尾。" class="headerlink" title="1). SQL语句可以单行或多行书写，以分号结尾。"></a>1). SQL语句可以单行或多行书写，以分号结尾。</h3><h3 id="2-SQL语句可以使用空格-x2F-缩进来增强语句的可读性。"><a href="#2-SQL语句可以使用空格-x2F-缩进来增强语句的可读性。" class="headerlink" title="2). SQL语句可以使用空格&#x2F;缩进来增强语句的可读性。"></a>2). SQL语句可以使用空格&#x2F;缩进来增强语句的可读性。</h3><h3 id="3-MySQL数据库的SQL语句不区分大小写，关键字建议使用大写。"><a href="#3-MySQL数据库的SQL语句不区分大小写，关键字建议使用大写。" class="headerlink" title="3). MySQL数据库的SQL语句不区分大小写，关键字建议使用大写。"></a>3). MySQL数据库的SQL语句不区分大小写，关键字建议使用大写。</h3><h3 id="4-注释："><a href="#4-注释：" class="headerlink" title="4). 注释："></a>4). 注释：</h3><p> 单行注释：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-- 注释内容 或 # 注释内容</span><br></pre></td></tr></table></figure><p>多行注释：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/* 注释内容 */</span><br></pre></td></tr></table></figure><h2 id="2-2-SQL分类"><a href="#2-2-SQL分类" class="headerlink" title="2.2 SQL分类"></a>2.2 SQL分类</h2><p>SQL语句，根据其功能，主要分为四类：DDL、DML、DQL、DCL。</p><p><img src="/2022/08/26/MYSql/3.png"></p><h2 id="2-3-DDL"><a href="#2-3-DDL" class="headerlink" title="2.3 DDL"></a>2.3 DDL</h2><p>Data Definition Language，数据定义语言，用来定义数据库对象(数据库，表，字段) 。</p><h3 id="2-3-1-数据库操作"><a href="#2-3-1-数据库操作" class="headerlink" title="2.3.1 数据库操作"></a>2.3.1 数据库操作</h3><h4 id="1-查询所有数据库"><a href="#1-查询所有数据库" class="headerlink" title="1). 查询所有数据库"></a>1). 查询所有数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><h4 id="2-查询当前数据库"><a href="#2-查询当前数据库" class="headerlink" title="2). 查询当前数据库"></a>2). 查询当前数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select database();</span><br></pre></td></tr></table></figure><h4 id="3-创建数据库"><a href="#3-创建数据库" class="headerlink" title="3). 创建数据库"></a>3). 创建数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database [ if not exists ] 数据库名 [ default charset 字符集 ] [ collate 排序 规则 ];</span><br></pre></td></tr></table></figure><h5 id="案例：-A-创建一个itcast数据库-使用数据库默认的字符集。"><a href="#案例：-A-创建一个itcast数据库-使用数据库默认的字符集。" class="headerlink" title="案例： A. 创建一个itcast数据库, 使用数据库默认的字符集。"></a>案例： A. 创建一个itcast数据库, 使用数据库默认的字符集。</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database itcast;</span><br></pre></td></tr></table></figure><p>在同一个数据库服务器中，不能创建两个名称相同的数据库，否则将会报错。</p><p>可以通过if not exists 参数来解决这个问题，数据库不存在, 则创建该数据库，如果存在，则不创建。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database if not extists itcast;</span><br></pre></td></tr></table></figure><h5 id="B-创建一个itheima数据库，并且指定字符集"><a href="#B-创建一个itheima数据库，并且指定字符集" class="headerlink" title="B. 创建一个itheima数据库，并且指定字符集"></a>B. 创建一个itheima数据库，并且指定字符集</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database itheima default charset utf8mb4;</span><br></pre></td></tr></table></figure><h4 id="4-删除数据库"><a href="#4-删除数据库" class="headerlink" title="4). 删除数据库"></a>4). 删除数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database [ if exists ] 数据库名 ;</span><br></pre></td></tr></table></figure><p>如果删除一个不存在的数据库，将会报错。此时，可以加上参数 if exists ，如果数据库存在，再 执行删除，否则不执行删除。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database if exists test;</span><br></pre></td></tr></table></figure><h4 id="5-切换数据库"><a href="#5-切换数据库" class="headerlink" title="5). 切换数据库"></a>5). 切换数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use 数据库名 ;</span><br></pre></td></tr></table></figure><p>我们要操作某一个数据库下的表时，就需要通过该指令，切换到对应的数据库下，否则是不能操作的。 比如，切换到itcast数据，执行如下SQL：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use itcast;</span><br></pre></td></tr></table></figure><h3 id="2-3-2-表操作"><a href="#2-3-2-表操作" class="headerlink" title="2.3.2 表操作"></a>2.3.2 表操作</h3><h4 id="2-3-2-1-表操作-查询创建"><a href="#2-3-2-1-表操作-查询创建" class="headerlink" title="2.3.2.1 表操作-查询创建"></a>2.3.2.1 表操作-查询创建</h4><h5 id="1-查询当前数据库所有表"><a href="#1-查询当前数据库所有表" class="headerlink" title="1). 查询当前数据库所有表"></a>1). 查询当前数据库所有表</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><p>比如,我们可以切换到sys这个系统数据库,并查看系统数据库中的所有表结构。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use sys;</span><br><span class="line">show tables;</span><br></pre></td></tr></table></figure><h5 id="2-查看指定表结构"><a href="#2-查看指定表结构" class="headerlink" title="2). 查看指定表结构"></a>2). 查看指定表结构</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc 表名 ;</span><br></pre></td></tr></table></figure><p>通过这条指令，我们可以查看到指定表的字段，字段的类型、是否可以为NULL，是否存在默认值等信 息。</p><h5 id="3-查询指定表的建表语句"><a href="#3-查询指定表的建表语句" class="headerlink" title="3). 查询指定表的建表语句"></a>3). 查询指定表的建表语句</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create table 表名 ;</span><br></pre></td></tr></table></figure><p>通过这条指令，主要是用来查看建表语句的，而有部分参数我们在创建表的时候，并未指定也会查询 到，因为这部分是数据库的默认值，如：存储引擎、字符集等。</p><h5 id="4-创建表结构"><a href="#4-创建表结构" class="headerlink" title="4). 创建表结构"></a>4). 创建表结构</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE 表名( </span><br><span class="line">字段1 字段1类型 [ COMMENT 字段1注释 ], </span><br><span class="line">字段2 字段2类型 [COMMENT 字段2注释 ], </span><br><span class="line">字段3 字段3类型 [COMMENT 字段3注释 ], </span><br><span class="line">...... </span><br><span class="line">字段n 字段n类型 [COMMENT 字段n注释 ] </span><br><span class="line">) [ COMMENT 表注释 ] ;</span><br></pre></td></tr></table></figure><p>[^注意]:  […] 内为可选参数，最后一个字段后面没有逗号</p><p>比如，我们创建一张表 tb_user ，对应的结构如下，那么建表语句为：</p><p><img src="/2022/08/26/MYSql/4.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table tb_user(</span><br><span class="line">id int comment &#x27;编号&#x27;,</span><br><span class="line">name varchar(50) comment &#x27;姓名&#x27;,</span><br><span class="line">age int comment &#x27;年龄&#x27;,</span><br><span class="line">gender varchar(1) comment &#x27;性别&#x27;</span><br><span class="line">) comment &#x27;用户表&#x27;;</span><br></pre></td></tr></table></figure><h4 id="2-3-2-2-表操作-数据类型"><a href="#2-3-2-2-表操作-数据类型" class="headerlink" title="2.3.2.2 表操作-数据类型"></a>2.3.2.2 表操作-数据类型</h4><p>在上述的建表语句中，我们在指定字段的数据类型时，用到了int ，varchar，那么在MySQL中除了 以上的数据类型，还有哪些常见的数据类型呢？ 接下来,我们就来详细介绍一下MySQL的数据类型。</p><p>MySQL中的数据类型有很多，主要分为三类：数值类型、字符串类型、日期时间类型。</p><h5 id="1-数值类型"><a href="#1-数值类型" class="headerlink" title="1). 数值类型"></a>1). 数值类型</h5><table><thead><tr><th>分类</th><th>类型</th><th align="left">大小</th><th>有符号(SIGNED)范围</th><th>无符号(UNSIGNED)范围</th><th>描述</th></tr></thead><tbody><tr><td></td><td>TINYINT</td><td align="left">1 byte</td><td>(-128，127)</td><td>(0，255)</td><td>小整数值</td></tr><tr><td></td><td>SMALLINT</td><td align="left">2  bytes</td><td>(-32768，32767)</td><td>(0，65535)</td><td>大整数值</td></tr><tr><td></td><td>MEDIUMINT</td><td align="left">3  bytes</td><td>(-8388608，8388607)</td><td>(0，16777215)</td><td>大整数值</td></tr><tr><td></td><td>INT或INTEGER</td><td align="left">4  bytes</td><td>(-2147483648，2147483647)</td><td>(0，4294967295)</td><td>大整数值</td></tr><tr><td></td><td>BIGINT</td><td align="left">8  bytes</td><td>(-2^63，2^63-1)</td><td>(0，2^64-1)</td><td>极大整数值</td></tr><tr><td></td><td>FLOAT</td><td align="left">4  bytes</td><td>(-3.402823466 E+38，3.402823466351  E+38)</td><td>0 和 (1.175494351  E-38，3.402823466 E+38)</td><td>单精度浮点数值</td></tr><tr><td></td><td>DOUBLE</td><td align="left">8  bytes</td><td>(-1.7976931348623157 E+308，1.7976931348623157 E+308)</td><td>0 和  (2.2250738585072014 E-308，1.7976931348623157 E+308)</td><td>双精度浮点数值</td></tr><tr><td></td><td>DECIMAL</td><td align="left"></td><td>依赖于M(精度)和D(标度)的值</td><td>依赖于M(精度)和D(标度)的值</td><td>小数值(精确定点数)</td></tr><tr><td></td><td></td><td align="left"></td><td></td><td></td><td></td></tr></tbody></table><p>例如：123.45，精度就是5，标度就是小数点后面的两位数，这里标度是2.</p><table><thead><tr><th>age  TINYINT UNSIGNED</th><th>加UNSIGNED就是使用无符号的</th></tr></thead></table><p>如: 1). 年龄字段 – 不会出现负数, 而且人的年龄不会太大 age tinyint unsigned </p><p>​  2). 分数 – 总分100分, 最多出现一位小数 score double(4,1)</p><h5 id="2-字符串类型"><a href="#2-字符串类型" class="headerlink" title="2). 字符串类型"></a>2). 字符串类型</h5>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>测试代码2</title>
      <link href="/2022/08/24/%E6%B5%8B%E8%AF%95%E4%BB%A3%E7%A0%812/"/>
      <url>/2022/08/24/%E6%B5%8B%E8%AF%95%E4%BB%A3%E7%A0%812/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn500&quot;</span>&gt;</span>点击夏雨荷到500<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn800&quot;</span>&gt;</span>点击夏雨荷到800<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>夏雨荷<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 缓动动画函数封装obj目标对象 target 目标位置</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 思路：</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 让盒子每次移动的距离慢慢变小， 速度就会慢慢落下来。</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 核心算法：(目标值 - 现在的位置) / 10 做为每次移动的距离 步长</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 3. 停止的条件是： 让当前盒子位置等于目标位置就停止定时器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params">obj, target</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 先清除以前的定时器，只保留当前的一个定时器执行</span></span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span></span><br><span class="line"><span class="language-javascript">        obj.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 步长值写到定时器的里面</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 把我们步长值改为整数 不要出现小数的问题</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// var step = Math.ceil((target - obj.offsetLeft) / 10);</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> step = (target - obj.<span class="property">offsetLeft</span>) / <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">            step = step &gt; <span class="number">0</span> ? <span class="title class_">Math</span>.<span class="title function_">ceil</span>(step) : <span class="title class_">Math</span>.<span class="title function_">floor</span>(step);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (obj.<span class="property">offsetLeft</span> == target) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 停止动画 本质是停止定时器</span></span></span><br><span class="line"><span class="language-javascript">                <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 把每次加1 这个步长值改为一个慢慢变小的值  步长公式：(目标值 - 现在的位置) / 10</span></span></span><br><span class="line"><span class="language-javascript">            obj.<span class="property">style</span>.<span class="property">left</span> = obj.<span class="property">offsetLeft</span> + step + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">15</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> span = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> btn500 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn500&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> btn800 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn800&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    btn500.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 调用函数</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">animate</span>(span, <span class="number">500</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    btn800.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 调用函数</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">animate</span>(span, <span class="number">800</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 匀速动画 就是 盒子是当前的位置 +  固定的值 10</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 缓动动画就是  盒子当前的位置 + 变化的值(目标值 - 现在的位置) / 10）</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试文章</title>
      <link href="/2022/08/23/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
      <url>/2022/08/23/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 我的第一个文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试文章</title>
      <link href="/2022/08/23/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A02/"/>
      <url>/2022/08/23/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A02/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn500&quot;</span>&gt;</span>点击夏雨荷到500<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn800&quot;</span>&gt;</span>点击夏雨荷到800<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>夏雨荷<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 缓动动画函数封装obj目标对象 target 目标位置</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 思路：</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 让盒子每次移动的距离慢慢变小， 速度就会慢慢落下来。</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 核心算法：(目标值 - 现在的位置) / 10 做为每次移动的距离 步长</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 3. 停止的条件是： 让当前盒子位置等于目标位置就停止定时器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params">obj, target</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 先清除以前的定时器，只保留当前的一个定时器执行</span></span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span></span><br><span class="line"><span class="language-javascript">        obj.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 步长值写到定时器的里面</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 把我们步长值改为整数 不要出现小数的问题</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// var step = Math.ceil((target - obj.offsetLeft) / 10);</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> step = (target - obj.<span class="property">offsetLeft</span>) / <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">            step = step &gt; <span class="number">0</span> ? <span class="title class_">Math</span>.<span class="title function_">ceil</span>(step) : <span class="title class_">Math</span>.<span class="title function_">floor</span>(step);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (obj.<span class="property">offsetLeft</span> == target) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 停止动画 本质是停止定时器</span></span></span><br><span class="line"><span class="language-javascript">                <span class="built_in">clearInterval</span>(obj.<span class="property">timer</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 把每次加1 这个步长值改为一个慢慢变小的值  步长公式：(目标值 - 现在的位置) / 10</span></span></span><br><span class="line"><span class="language-javascript">            obj.<span class="property">style</span>.<span class="property">left</span> = obj.<span class="property">offsetLeft</span> + step + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">15</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> span = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> btn500 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn500&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> btn800 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn800&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    btn500.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 调用函数</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">animate</span>(span, <span class="number">500</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    btn800.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 调用函数</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">animate</span>(span, <span class="number">800</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 匀速动画 就是 盒子是当前的位置 +  固定的值 10</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 缓动动画就是  盒子当前的位置 + 变化的值(目标值 - 现在的位置) / 10）</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 我的第一个文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/08/23/hello-world/"/>
      <url>/2022/08/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
